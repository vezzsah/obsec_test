name: cd

on:
  push:
    branches: [main]

permissions:
  contents: read
  id-token: 'write'

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      GOFLAGS: -mod=vendor
      GOPROXY: "https://proxy.golang.org,direct"
      
    steps:
      - name: Check out code.
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.0"

      - name: Go Mod Tidy.
        run: go mod tidy

      - name: Go Mod Vendor.
        run: go mod vendor

      - name: Build app.
        run: ./scripts/buildprod.sh

      - name: 'GCP Auth'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ secrets.WIP_PROVIDER }}'
          service_account: '${{ secrets.SA_GCP }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.12.2"

      - name: Terraform Init
        run: terraform init
        working-directory: ./infra

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan -input=false
        working-directory: ./infra

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
        working-directory: ./infra

      - name: Get GKE credentials
        run: |
          gcloud components install gke-gcloud-auth-plugin
          gcloud container clusters get-credentials obsec-gke-cluster --zone us-central1-a --project ${{ secrets.GCP_PROJECT }}

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.18.4

      - name: Helm - Install CSI Plugin
        run: |
          helm repo add secrets-store-csi-driver https://kubernetes-sigs.github.io/secrets-store-csi-driver/charts
          helm repo update
          helm upgrade -i csi-secrets-store secrets-store-csi-driver/secrets-store-csi-driver --namespace obsec-challenge --create-namespace

      - name: Helm - Install Server Chart
        run: |
          helm upgrade --install obsec-server ./obsec-chart --namespace obsec-challenge --create-namespace